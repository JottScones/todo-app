{"version":3,"sources":["components/layout/Header.js","components/AddTodo.js","components/pages/About.js","components/TodoItem.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","AddTodo","state","title","onSubmit","e","preventDefault","props","addTodo","setState","onChange","target","name","value","this","display","type","placeholder","flex","border","className","Component","About","Fragment","TodoItem","getStyle","todo","completed","backgroundColor","borderBottom","id","markComplete","bind","onClick","delTodo","btnStyle","borderRadius","cursor","float","Todos","todos","map","key","App","uuid","filter","newTodo","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0ae5765.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/TodoApp\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: 'white',\n  textAlign: 'center',\n  padding: '10px'\n}\n\nconst linkStyle = {\n  color: 'white',\n  textDecoration: 'none'\n}\nexport default Header;\n","import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({title: ''});\n  }\n\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add Todo...\"\n          style={{flex: '10', border: 'none'}}\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{flex: '1'}}\n        />\n      </form>\n    );\n  }\n\n}\n\nexport default AddTodo;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <React.Fragment>\n    <h1>About</h1>\n    <h2>Note: this may appear quite slow as it is using server requests</h2>\n    <p>This is the TodoList app v1.0.0. To help me learn React.</p>\n    </React.Fragment>\n  );\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      textDecoration: this.props.todo.completed ?\n      'line-through' : 'none',\n      padding: '10px',\n      backgroundColor: '#f4f4f4',\n      borderBottom: '1px #ccc dotted'\n    }\n  }\n\n  render() {\n    const {id, title} = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n        <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>\n        {\" \"}\n        {title}\n        <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>X</button>\n        </p>\n      </div>\n    );\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n  background: 'red',\n  color: 'white',\n  border: 'none',\n  borderRadius: '50%',\n  padding: '5px 8px',\n  cursor: 'pointer',\n  float: 'right'\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\n    ));\n  }\n}\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport Todos from './components/Todos';\nimport {v4 as uuid} from 'uuid';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: [{\n      id: uuid(),\n      title: \"This is a sample todo\",\n      completed: false\n    }]\n  }\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState({todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n      })\n    });\n  }\n\n  // Delete todo\n  delTodo = (id) => {\n    this.setState({todos: this.state.todos.filter(todo => todo.id !== id)});\n  }\n\n  // Add todo\n  addTodo = (title) => {\n    const todos = this.state.todos;\n    const newTodo = {\n      id: uuid(),\n      title,\n      completed: false\n    }\n    this.setState({todos: [...todos, newTodo]});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/TodoApp\" render={props => (\n              <React.Fragment>\n              <AddTodo addTodo={this.addTodo}/>\n              <Todos\n                todos={this.state.todos}\n                markComplete={this.markComplete}\n                delTodo={this.delTodo}\n              />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}